一 初始化：
https://github.com/top-think/think
composer create-project topthink/think 项目名 版本号
php think run
php think optimize:autoload
二 类的自动加载：
自动加载loader
$classAlias = [];
$prefixLengthsPsr4 = [];
$prefixDirsPsr4    = [];
$fallbackDirsPsr4  = [];
自定义目录加载到应用
self::addAutoLoadDir($rootPath . 'singwa');
1 如何将别的深层次目录类加载到应用？
composer自动加载机制
composer require topthink/think-helper
三 配置文件：
惯例配置
应用配置
模块配置
动态配置
ArrayAccess 像访问数组一样访问对象
2 extend目录下不需要命名空间？
Yaconf:
phpize生产configure文件
./configure --with-php-config=/usr/local/php/php-7.0/bin/php-config
make -j
make install
.so文件位置
/usr/local/php/php-7.0/lib/php/extensions/debug-non-zts-20151012/
yaconf常驻内存
3 config底层分析：
导图：load->set->get->ArrayAccess
parse_ini_file解析文件函数
yaml 数据序列化
pecl install yaml
yaml_parse_file(filename)
2366094489
四 容器与设计模式
1 单例模式：
private构造函数；
静态成员变量保存类实例；
访问实例的静态方法；
2 注册树模式
类对象注册到全局对象树上，需要时再从树上拿下来
3 依赖注入和控制反转 一个概念的不同角度描述
只需要在应用层面修改代码逻辑
4 反射
PHP在运行状态中，动态的获取类、方法、属性、参数、注释等信息和动态调用对象的方法的功能
框架中的反射
5 自制容器
$this->instance //对象实例
$this->bind //绑定标识
$this->name //标识别名
isset instanceof
bindTo
作业：
a return $method->invokeArgs(null, $args);为何第一个参数是null
b bindParams($reflect, $vars = [])函数内容
